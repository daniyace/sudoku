{"version":3,"sources":["components/Game.jsx","components/Selection.jsx","App.js","index.js"],"names":["Game","props","ban","numb","number","cant","useState","grid","setGrid","first","setFirst","lost","setLost","win","setWin","current","setCurrent","numbers","setNumbers","errors","setErrors","endGame","alert","reset","setDiff","setSelect","useEffect","difficulty","select","matrix","values","shifts","lista","sort","Math","random","i","j","k","push","shift","mat","floor","x","y","content","userVal","start","diff","positions","length","className","map","row","col","onClick","copy","handleLeftClick","onContextMenu","e","preventDefault","console","log","handleRigthClick","num","Selection","name","id","defaultValue","value","document","getElementById","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.0ae319d9.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/game.css';\r\n\r\nfunction Game(props) {\r\n  const size = 9;\r\n  let ban = true;\r\n  let numb = [\r\n    { number: 1, cant: 0 },\r\n    { number: 2, cant: 0 },\r\n    { number: 3, cant: 0 },\r\n    { number: 4, cant: 0 },\r\n    { number: 5, cant: 0 },\r\n    { number: 6, cant: 0 },\r\n    { number: 7, cant: 0 },\r\n    { number: 8, cant: 0 },\r\n    { number: 9, cant: 0 },\r\n  ];\r\n\r\n  const [grid, setGrid] = useState(false);\r\n  const [first, setFirst] = useState(true);\r\n  const [lost, setLost] = useState(false);\r\n  const [win, setWin] = useState(false);\r\n  const [current, setCurrent] = useState(false);\r\n  const [numbers, setNumbers] = useState(numb);\r\n  const [errors, setErrors] = useState(0);\r\n\r\n  const start = () => {\r\n    let matrix = [];\r\n    let values = [];\r\n    const shifts = [3, 3, 1, 3, 3, 1, 3, 3];\r\n    let lista = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n    const bigrowshift = [0, 3, 6];\r\n    lista = lista.sort(() => {\r\n      return Math.random() - 0.5;\r\n    });\r\n    for (let i = 0; i < size; i++) {\r\n      values[i] = [];\r\n      for (let j = 0; j < size; j++) {\r\n        values[i][j] = lista[j];\r\n      }\r\n      for (let k = shifts[i]; k < size; k++) {\r\n        lista.push(lista.shift());\r\n      }\r\n    }\r\n    let mat = [...values];\r\n\r\n    for (let i = bigrowshift[Math.floor(Math.random() * 3)]; i > 0; i--) {\r\n      mat.push(mat.shift());\r\n    }\r\n    values = [...mat];\r\n\r\n    for (let i = 0; i < size; i++) {\r\n      matrix[i] = [];\r\n      for (let j = 0; j < size; j++)\r\n        matrix[i][j] = {\r\n          x: i,\r\n          y: j,\r\n          content: values[i][j],\r\n          userVal: values[i][j],\r\n        };\r\n    }\r\n\r\n    setGrid(matrix);\r\n  };\r\n\r\n  const handleRigthClick = (e, col) => {\r\n    e.preventDefault();\r\n    if (col.content !== col.userVal) {\r\n      let x = col.x;\r\n      let y = col.y;\r\n      let copy = [...grid];\r\n      copy[x][y].userVal = '‏‏‎ ‎';\r\n      setGrid(copy);\r\n      console.log(col.content);\r\n    }\r\n  };\r\n\r\n  const handleLeftClick = (col) => {\r\n    if (col.content !== col.userVal && current) {\r\n      let x = col.x;\r\n      let y = col.y;\r\n      let copy = [...grid];\r\n      copy[x][y].userVal = current;\r\n\r\n      if (copy[x][y].content === current) {\r\n        numb = [...numbers];\r\n        switch (current) {\r\n          case 1:\r\n            numb[0].cant--;\r\n            if (numb[0].cant < 1) setCurrent(false);\r\n            break;\r\n          case 2:\r\n            numb[1].cant--;\r\n            if (numb[1].cant < 1) setCurrent(false);\r\n            break;\r\n          case 3:\r\n            numb[2].cant--;\r\n            if (numb[2].cant < 1) setCurrent(false);\r\n            break;\r\n          case 4:\r\n            numb[3].cant--;\r\n            if (numb[3].cant < 1) setCurrent(false);\r\n            break;\r\n          case 5:\r\n            numb[4].cant--;\r\n            if (numb[4].cant < 1) setCurrent(false);\r\n            break;\r\n          case 6:\r\n            numb[5].cant--;\r\n            if (numb[5].cant < 1) setCurrent(false);\r\n            break;\r\n          case 7:\r\n            numb[6].cant--;\r\n            if (numb[6].cant < 1) setCurrent(false);\r\n            break;\r\n          case 8:\r\n            numb[7].cant--;\r\n            if (numb[7].cant < 1) setCurrent(false);\r\n            break;\r\n          case 9:\r\n            numb[8].cant--;\r\n            if (numb[8].cant < 1) setCurrent(false);\r\n            break;\r\n          default:\r\n        }\r\n        setNumbers(numb);\r\n        endGame(numb);\r\n      } else setErrors(errors + 1);\r\n\r\n      setGrid(copy);\r\n    }\r\n  };\r\n  const endGame = (numb) => {\r\n    ban = false;\r\n    if (\r\n      numb[0].cant === 0 &&\r\n      numb[1].cant === 0 &&\r\n      numb[2].cant === 0 &&\r\n      numb[3].cant === 0 &&\r\n      numb[4].cant === 0 &&\r\n      numb[5].cant === 0 &&\r\n      numb[6].cant === 0 &&\r\n      numb[7].cant === 0 &&\r\n      numb[8].cant === 0\r\n    )\r\n      ban = true;\r\n\r\n    if (ban) {\r\n      if (errors === 0) setWin(true);\r\n      else setLost(true);\r\n      alert('Game Over');\r\n    }\r\n  };\r\n  const reset = () => {\r\n    props.setDiff(false);\r\n    setGrid(false);\r\n    props.setSelect(false);\r\n    setFirst(true);\r\n    setLost(false);\r\n    setWin(false);\r\n    ban = false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const difficulty = [35, 45, 55, 65];\r\n\r\n    if (first && props.select) {\r\n      setFirst(false);\r\n      start();\r\n    }\r\n    if (props.diff && grid) {\r\n      let matrix = [...grid];\r\n      let numb = [...numbers];\r\n      let positions = [];\r\n      let ban = false;\r\n\r\n      for (let i = 0; i < difficulty[props.diff]; i++) {\r\n        let x = Math.floor(Math.random() * 9);\r\n        let y = Math.floor(Math.random() * 9);\r\n        do {\r\n          for (let k = 0; k < positions.length; k++)\r\n            if (positions[k].x === x && positions[k].y === y) {\r\n              ban = true;\r\n              x = Math.floor(Math.random() * 9);\r\n              y = Math.floor(Math.random() * 9);\r\n              break;\r\n            } else {\r\n              ban = false;\r\n            }\r\n        } while (ban);\r\n\r\n        positions.push({\r\n          x: x,\r\n          y: y,\r\n        });\r\n      }\r\n\r\n      for (let i = 0; i < positions.length; i++) {\r\n        switch (matrix[positions[i].x][positions[i].y].userVal) {\r\n          case 1:\r\n            numb[0].cant++;\r\n            break;\r\n          case 2:\r\n            numb[1].cant++;\r\n            break;\r\n          case 3:\r\n            numb[2].cant++;\r\n            break;\r\n          case 4:\r\n            numb[3].cant++;\r\n            break;\r\n          case 5:\r\n            numb[4].cant++;\r\n            break;\r\n          case 6:\r\n            numb[5].cant++;\r\n            break;\r\n          case 7:\r\n            numb[6].cant++;\r\n            break;\r\n          case 8:\r\n            numb[7].cant++;\r\n            break;\r\n          case 9:\r\n            numb[8].cant++;\r\n            break;\r\n          default:\r\n        }\r\n        matrix[positions[i].x][positions[i].y].userVal = '‏‏‎ ‎';\r\n      }\r\n      if (numb) setNumbers(numb);\r\n      if (matrix) setGrid(grid);\r\n      props.setDiff(false);\r\n    }\r\n  }, [props.select, props.diff, first, grid, props, numbers]);\r\n\r\n  if (grid)\r\n    return (\r\n      <div className='grid'>\r\n        <div className='centertext'>\r\n          <h5 className='current d-inline-flex'>\r\n            {current ? `Current selection: ${current}` : 'No one selected'}\r\n          </h5>\r\n          <h5 className='errors d-inline-flex'>Errors {errors}</h5>\r\n        </div>\r\n\r\n        {grid.map((row, i) => (\r\n          <div key={i}>\r\n            {row.map((col, j) => (\r\n              <div\r\n                key={j}\r\n                className={\r\n                  col.userVal === col.content && current === col.userVal\r\n                    ? 'active d-inline-flex'\r\n                    : col.userVal === '‏‏‎ ‎'\r\n                    ? 'd-inline-flex'\r\n                    : col.userVal !== col.content\r\n                    ? 'wrong d-inline-flex'\r\n                    : 'd-inline-flex'\r\n                }\r\n              >\r\n                <div\r\n                  onClick={() => {\r\n                    handleLeftClick(col);\r\n                  }}\r\n                  onContextMenu={(e) => {\r\n                    handleRigthClick(e, col);\r\n                  }}\r\n                  className={\r\n                    i === 0 && j === 0\r\n                      ? `cont ${col.content} tl`\r\n                      : i === 8 && j === 0\r\n                      ? `cont ${col.content} bl`\r\n                      : i === 0 && j === 8\r\n                      ? `cont ${col.content} tr`\r\n                      : i === 8 && j === 8\r\n                      ? `cont ${col.content} br`\r\n                      : j === 2 || j === 5\r\n                      ? i === 2 || i === 5\r\n                        ? `cont ${col.content} l b`\r\n                        : `cont ${col.content} l `\r\n                      : i === 2 || i === 5\r\n                      ? `cont ${col.content} b`\r\n                      : `cont ${col.content}`\r\n                  }\r\n                >\r\n                  <p className='text-center'>{col.userVal}</p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        <div>\r\n          <div className='d-inline-flex nums'>\r\n            {numbers.map((num, j) =>\r\n              num.cant > 0 ? (\r\n                <div\r\n                  className={\r\n                    current === num.number ? 'numsel active' : 'numsel'\r\n                  }\r\n                  key={num.number}\r\n                  onClick={() => setCurrent(num.number)}\r\n                >\r\n                  <p className='text-center'>{num.number}</p>\r\n                </div>\r\n              ) : (\r\n                <div className='numselvac' key={num.number} />\r\n              )\r\n            )}\r\n          </div>\r\n          {lost ? (\r\n            <button className='btn btn-danger res' onClick={() => reset()}>\r\n              Reset\r\n            </button>\r\n          ) : (\r\n            ''\r\n          )}\r\n          {win ? (\r\n            <button className='btn btn-success win' onClick={() => reset()}>\r\n              Reset\r\n            </button>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  else return '';\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport '../styles/selection.css';\r\n\r\nconst Selection = (props) => {\r\n  return (\r\n    <div className='selection container'>\r\n      <header>\r\n        <h1 className='text-center'>Sudoku on React</h1>\r\n      </header>\r\n      <section>\r\n        <h3 className='text-center par'>Choose the difficulty</h3>\r\n        <div className='center'>\r\n          <select name='diff' id='diff' className='select' defaultValue={1}>\r\n            <option value={0}>Easy</option>\r\n            <option value={1}>Normal</option>\r\n            <option value={2}>Hard</option>\r\n            <option value={3}>You cant win</option>\r\n          </select>\r\n          <button\r\n            className='btn btn-primary '\r\n            onClick={() => {\r\n              let e = document.getElementById('diff');\r\n              props.setDiff(e.value);\r\n              props.setSelect(true);\r\n            }}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Selection;\r\n","import React, { useState } from 'react';\nimport Game from './components/Game';\nimport Selection from './components/Selection';\n\nfunction App() {\n  const [diff, setDiff] = useState(false);\n  const [select, setSelect] = useState(false);\n  return (\n    <div className='container'>\n      {!select ? (\n        <Selection setSelect={setSelect} setDiff={setDiff} />\n      ) : (\n        <Game\n          diff={diff}\n          select={select}\n          setSelect={setSelect}\n          setDiff={setDiff}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}