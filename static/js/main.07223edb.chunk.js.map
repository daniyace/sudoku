{"version":3,"sources":["components/Game.jsx","components/Selection.jsx","App.js","index.js"],"names":["Game","props","ban","numb","number","cant","x","useState","grid","setGrid","first","setFirst","lost","setLost","win","setWin","current","setCurrent","numbers","setNumbers","errors","setErrors","cords","setCords","animation","setAnimation","endGame","alert","reset","setDiff","setSelect","useEffect","setTimeout","difficulty","select","matrix","values","shifts","lista","sort","Math","random","i","j","k","push","shift","mat","floor","y","content","userVal","start","diff","positions","length","variants","static","scale","backgroundColor","height","width","borderRadius","marginLeft","marginRight","padding","marginTop","transition","type","duration","selected","vgrid","rotateY","active","numact","className","map","row","col","motion","div","animate","delay","onClick","copy","handleLeftClick","onContextMenu","e","preventDefault","console","log","handleRigthClick","p","num","style","Selection","name","id","defaultValue","value","document","getElementById","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.07223edb.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport '../styles/game.css';\r\nimport { motion } from 'framer-motion';\r\n\r\nfunction Game(props) {\r\n  const size = 9;\r\n  let ban = true;\r\n  let numb = [\r\n    { number: 1, cant: 0, x: 0 },\r\n    { number: 2, cant: 0, x: 1 },\r\n    { number: 3, cant: 0, x: 2 },\r\n    { number: 4, cant: 0, x: 3 },\r\n    { number: 5, cant: 0, x: 4 },\r\n    { number: 6, cant: 0, x: 5 },\r\n    { number: 7, cant: 0, x: 6 },\r\n    { number: 8, cant: 0, x: 7 },\r\n    { number: 9, cant: 0, x: 8 },\r\n  ];\r\n\r\n  const [grid, setGrid] = useState(false);\r\n  const [first, setFirst] = useState(true);\r\n  const [lost, setLost] = useState(false);\r\n  const [win, setWin] = useState(false);\r\n  const [current, setCurrent] = useState(false);\r\n  const [numbers, setNumbers] = useState(numb);\r\n  const [errors, setErrors] = useState(0);\r\n  const [cords, setCords] = useState(false);\r\n  const [animation, setAnimation] = useState(true);\r\n  const start = () => {\r\n    let matrix = [];\r\n    let values = [];\r\n    const shifts = [3, 3, 1, 3, 3, 1, 3, 3];\r\n    let lista = [1, 2, 3, 4, 5, 6, 7, 8, 9];\r\n    const bigrowshift = [0, 3, 6];\r\n    lista = lista.sort(() => {\r\n      return Math.random() - 0.5;\r\n    });\r\n    for (let i = 0; i < size; i++) {\r\n      values[i] = [];\r\n      for (let j = 0; j < size; j++) {\r\n        values[i][j] = lista[j];\r\n      }\r\n      for (let k = shifts[i]; k < size; k++) {\r\n        lista.push(lista.shift());\r\n      }\r\n    }\r\n    let mat = [...values];\r\n\r\n    for (let i = bigrowshift[Math.floor(Math.random() * 3)]; i > 0; i--) {\r\n      mat.push(mat.shift());\r\n    }\r\n    values = [...mat];\r\n\r\n    for (let i = 0; i < size; i++) {\r\n      matrix[i] = [];\r\n      for (let j = 0; j < size; j++)\r\n        matrix[i][j] = {\r\n          x: i,\r\n          y: j,\r\n          content: values[i][j],\r\n          userVal: values[i][j],\r\n        };\r\n    }\r\n\r\n    setGrid(matrix);\r\n  };\r\n\r\n  const handleRigthClick = (e, col) => {\r\n    e.preventDefault();\r\n    if (col.content !== col.userVal) {\r\n      let x = col.x;\r\n      let y = col.y;\r\n      let copy = [...grid];\r\n      copy[x][y].userVal = '‏‏‎ ‎';\r\n      setGrid(copy);\r\n      console.log(col.content);\r\n    }\r\n  };\r\n\r\n  const handleLeftClick = (col) => {\r\n    if (col.content !== col.userVal && current) {\r\n      let x = col.x;\r\n      let y = col.y;\r\n      let copy = [...grid];\r\n      copy[x][y].userVal = current;\r\n\r\n      if (copy[x][y].content === current) {\r\n        numb = [...numbers];\r\n        switch (current) {\r\n          case 1:\r\n            numb[0].cant--;\r\n            if (numb[0].cant < 1) setCurrent(false);\r\n            break;\r\n          case 2:\r\n            numb[1].cant--;\r\n            if (numb[1].cant < 1) setCurrent(false);\r\n            break;\r\n          case 3:\r\n            numb[2].cant--;\r\n            if (numb[2].cant < 1) setCurrent(false);\r\n            break;\r\n          case 4:\r\n            numb[3].cant--;\r\n            if (numb[3].cant < 1) setCurrent(false);\r\n            break;\r\n          case 5:\r\n            numb[4].cant--;\r\n            if (numb[4].cant < 1) setCurrent(false);\r\n            break;\r\n          case 6:\r\n            numb[5].cant--;\r\n            if (numb[5].cant < 1) setCurrent(false);\r\n            break;\r\n          case 7:\r\n            numb[6].cant--;\r\n            if (numb[6].cant < 1) setCurrent(false);\r\n            break;\r\n          case 8:\r\n            numb[7].cant--;\r\n            if (numb[7].cant < 1) setCurrent(false);\r\n            break;\r\n          case 9:\r\n            numb[8].cant--;\r\n            if (numb[8].cant < 1) setCurrent(false);\r\n            break;\r\n          default:\r\n        }\r\n        setNumbers(numb);\r\n        endGame(numb);\r\n      } else setErrors(errors + 1);\r\n\r\n      setGrid(copy);\r\n    }\r\n  };\r\n  const endGame = (numb) => {\r\n    ban = false;\r\n    if (\r\n      numb[0].cant === 0 &&\r\n      numb[1].cant === 0 &&\r\n      numb[2].cant === 0 &&\r\n      numb[3].cant === 0 &&\r\n      numb[4].cant === 0 &&\r\n      numb[5].cant === 0 &&\r\n      numb[6].cant === 0 &&\r\n      numb[7].cant === 0 &&\r\n      numb[8].cant === 0\r\n    )\r\n      ban = true;\r\n\r\n    if (ban) {\r\n      if (errors === 0) setWin(true);\r\n      else setLost(true);\r\n      alert('Game Over');\r\n    }\r\n  };\r\n  const reset = () => {\r\n    props.setDiff(false);\r\n    setGrid(false);\r\n    props.setSelect(false);\r\n    setFirst(true);\r\n    setLost(false);\r\n    setWin(false);\r\n    ban = false;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (animation) {\r\n      setTimeout(() => {\r\n        setAnimation(false);\r\n      }, 2000);\r\n    }\r\n    const difficulty = [35, 45, 55, 65];\r\n\r\n    if (first && props.select) {\r\n      setFirst(false);\r\n      start();\r\n    }\r\n    if (props.diff && grid) {\r\n      let matrix = [...grid];\r\n      let numb = [...numbers];\r\n      let positions = [];\r\n      let ban = false;\r\n\r\n      for (let i = 0; i < difficulty[props.diff]; i++) {\r\n        let x = Math.floor(Math.random() * 9);\r\n        let y = Math.floor(Math.random() * 9);\r\n        do {\r\n          for (let k = 0; k < positions.length; k++)\r\n            if (positions[k].x === x && positions[k].y === y) {\r\n              ban = true;\r\n              x = Math.floor(Math.random() * 9);\r\n              y = Math.floor(Math.random() * 9);\r\n              break;\r\n            } else {\r\n              ban = false;\r\n            }\r\n        } while (ban);\r\n\r\n        positions.push({\r\n          x: x,\r\n          y: y,\r\n        });\r\n      }\r\n\r\n      for (let i = 0; i < positions.length; i++) {\r\n        switch (matrix[positions[i].x][positions[i].y].userVal) {\r\n          case 1:\r\n            numb[0].cant++;\r\n            break;\r\n          case 2:\r\n            numb[1].cant++;\r\n            break;\r\n          case 3:\r\n            numb[2].cant++;\r\n            break;\r\n          case 4:\r\n            numb[3].cant++;\r\n            break;\r\n          case 5:\r\n            numb[4].cant++;\r\n            break;\r\n          case 6:\r\n            numb[5].cant++;\r\n            break;\r\n          case 7:\r\n            numb[6].cant++;\r\n            break;\r\n          case 8:\r\n            numb[7].cant++;\r\n            break;\r\n          case 9:\r\n            numb[8].cant++;\r\n            break;\r\n          default:\r\n        }\r\n        matrix[positions[i].x][positions[i].y].userVal = '‏‏‎ ‎';\r\n      }\r\n      if (numb) setNumbers(numb);\r\n      if (matrix) {\r\n        setGrid(grid);\r\n      }\r\n      props.setDiff(false);\r\n    }\r\n  }, [props.select, props.diff, first, grid, props, numbers, animation]);\r\n  const variants = {\r\n    static: {\r\n      scale: 1,\r\n    },\r\n    animation: {\r\n      scale: 1,\r\n      backgroundColor: '#ffe365ad',\r\n      height: '2.1em',\r\n      width: '2.1em',\r\n      borderRadius: '10px',\r\n      marginLeft: 'auto',\r\n      marginRight: 'auto',\r\n      padding: '5px',\r\n      marginTop: '7px',\r\n      transition: {\r\n        type: 'spring',\r\n        duration: 0.5,\r\n      },\r\n    },\r\n    selected: {\r\n      scale: [1, 2, 1],\r\n      transition: {\r\n        type: 'spring',\r\n        duration: 0.5,\r\n      },\r\n    },\r\n  };\r\n  const vgrid = {\r\n    start: {\r\n      rotateY: 360,\r\n    },\r\n    active: { backgroundColor: '#91ff65ad' },\r\n    numact: { scale: 0.8, rotateY: 360 },\r\n  };\r\n  if (grid)\r\n    return (\r\n      <div className='grid'>\r\n        <div className='centertext'>\r\n          <h5 className='current d-inline-flex'>\r\n            {current ? `Current selection: ${current}` : 'No one selected'}\r\n          </h5>\r\n          <h5 className='errors d-inline-flex'>Errors: {errors}</h5>\r\n        </div>\r\n\r\n        {grid.map((row, i) => (\r\n          <div key={i}>\r\n            {row.map((col, j) => (\r\n              <motion.div\r\n                variants={vgrid}\r\n                animate={\r\n                  col.userVal === col.content && current === col.userVal\r\n                    ? 'active'\r\n                    : 'start'\r\n                }\r\n                transition={{\r\n                  type: 'spring',\r\n                  /*  repeat: 1,\r\n                  repeatType: 'reverse', */\r\n                  delay: (col.x + col.y) * 0.05,\r\n                  duration: 1,\r\n                }}\r\n                key={j}\r\n                className={\r\n                  col.userVal === col.content && current === col.userVal\r\n                    ? 'd-inline-flex'\r\n                    : col.userVal === '‏‏‎ ‎'\r\n                    ? 'd-inline-flex'\r\n                    : col.userVal !== col.content\r\n                    ? 'wrong d-inline-flex'\r\n                    : 'd-inline-flex'\r\n                }\r\n              >\r\n                <motion.div\r\n                  onClick={() => {\r\n                    handleLeftClick(col);\r\n                    if (cords)\r\n                      if (cords.x === col.x && cords.y === col.y)\r\n                        setCords(false);\r\n                      else setCords({ x: col.x, y: col.y });\r\n                    else setCords({ x: col.x, y: col.y });\r\n                  }}\r\n                  onContextMenu={(e) => handleRigthClick(e, col)}\r\n                  className={\r\n                    i === 0 && j === 0\r\n                      ? `cont ${col.content} tl`\r\n                      : i === 8 && j === 0\r\n                      ? `cont ${col.content} bl`\r\n                      : i === 0 && j === 8\r\n                      ? `cont ${col.content} tr`\r\n                      : i === 8 && j === 8\r\n                      ? `cont ${col.content} br`\r\n                      : j === 2 || j === 5\r\n                      ? i === 2 || i === 5\r\n                        ? `cont ${col.content} l b`\r\n                        : `cont ${col.content} l `\r\n                      : i === 2 || i === 5\r\n                      ? `cont ${col.content} b`\r\n                      : `cont ${col.content}`\r\n                  }\r\n                >\r\n                  <motion.p\r\n                    variants={variants}\r\n                    animate={\r\n                      cords.x === col.x || cords.y === col.y\r\n                        ? cords.x === col.x && cords.y === col.y\r\n                          ? 'selected'\r\n                          : 'animation'\r\n                        : 'static'\r\n                    }\r\n                    className='text-center'\r\n                  >\r\n                    {col.userVal}\r\n                  </motion.p>\r\n                </motion.div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        <div>\r\n          <div className='d-inline-flex nums'>\r\n            {numbers.map((num, j) =>\r\n              num.cant > 0 ? (\r\n                <motion.div\r\n                  style={{ scale: 1.1 }}\r\n                  transition={{\r\n                    delay: !animation ? 0 : num.number * 0.08,\r\n                    duration: 0.3,\r\n                  }}\r\n                  variants={vgrid}\r\n                  animate={current === num.number ? 'active' : 'numact'}\r\n                  className={current === num.number ? 'numsel ' : 'numsel'}\r\n                  key={num.number}\r\n                  onClick={() => {\r\n                    if (current === num.number) setCurrent(false);\r\n                    else {\r\n                      setCords(false);\r\n                      setCurrent(num.number);\r\n                    }\r\n                  }}\r\n                >\r\n                  <p className='text-center'>{num.number}</p>\r\n                </motion.div>\r\n              ) : (\r\n                <motion.div\r\n                  transition={{\r\n                    delay: !animation ? 0 : num.number * 0.08,\r\n                    duration: 0.3,\r\n                  }}\r\n                  variants={vgrid}\r\n                  animate={'hide'}\r\n                  key={num.number}\r\n                ></motion.div>\r\n              )\r\n            )}\r\n          </div>\r\n          {lost ? (\r\n            <button className='btn btn-danger res' onClick={() => reset()}>\r\n              Reset\r\n            </button>\r\n          ) : (\r\n            ''\r\n          )}\r\n          {win ? (\r\n            <button className='btn btn-success win' onClick={() => reset()}>\r\n              Reset\r\n            </button>\r\n          ) : (\r\n            ''\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  else return '';\r\n}\r\n\r\nexport default Game;\r\n","import React from 'react';\r\nimport '../styles/selection.css';\r\n\r\nconst Selection = (props) => {\r\n  return (\r\n    <div className='selection container'>\r\n      <header>\r\n        <h1 className='text-center'>Sudoku on React</h1>\r\n      </header>\r\n      <section>\r\n        <h3 className='text-center par'>Choose the difficulty</h3>\r\n        <div className='center'>\r\n          <select name='diff' id='diff' className='select' defaultValue={1}>\r\n            <option value={0}>Easy</option>\r\n            <option value={1}>Normal</option>\r\n            <option value={2}>Hard</option>\r\n            <option value={3}>You cant win</option>\r\n          </select>\r\n          <button\r\n            className='btn btn-primary '\r\n            onClick={() => {\r\n              let e = document.getElementById('diff');\r\n              props.setDiff(e.value);\r\n              props.setSelect(true);\r\n            }}\r\n          >\r\n            Start\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Selection;\r\n","import React, { useState } from 'react';\nimport Game from './components/Game';\nimport Selection from './components/Selection';\n\nfunction App() {\n  const [diff, setDiff] = useState(false);\n  const [select, setSelect] = useState(false);\n  return (\n    <div className='container'>\n      {!select ? (\n        <Selection setSelect={setSelect} setDiff={setDiff} />\n      ) : (\n        <Game\n          diff={diff}\n          select={select}\n          setSelect={setSelect}\n          setDiff={setDiff}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}